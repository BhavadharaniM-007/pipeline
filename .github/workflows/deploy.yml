name: pipeline 

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Deployment Repo
      uses: actions/checkout@v3

    - name: Clone Terraform Repo
      run: git clone https://github.com/BhavadharaniM-007/devops.git terraform

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: devops
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: terraform init

    - name: Terraform Plan
      working-directory: devops
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_REGION: us-east-1
      run: terraform plan

    - name: Terraform Apply
      working-directory: devops
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  ansible:
    name: Deploy with Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout Deployment Repo
      uses: actions/checkout@v3

    - name: Clone Ansible Repo
      run: git clone https://github.com/BhavadharaniM-007/deployment-ansible.git ansible

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add EC2 to known_hosts
      run: |
        ssh-keyscan -H 3.239.216.100 >> ~/.ssh/known_hosts
        ssh-keyscan -H 13.220.33.232 >> ~/.ssh/known_hosts

    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible

    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i ansible/inventory.ini ansible/playbook.yml --private-key ~/.ssh/id_rsa
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"

  smoke_test:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: ansible

    steps:
    - name: Test Frontend
      run: |
        STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://3.239.216.100)
        if [ $STATUS -ne 200 ]; then
          echo "Frontend health check failed!"
          exit 1
        fi

    - name: Test Backend
      run: |
        STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://13.220.33.232/api/health)
        if [ $STATUS -ne 200 ]; then
          echo "Backend health check failed!"
          exit 1
        fi